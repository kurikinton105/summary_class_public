"""
termextract.chinese_paintext.py
"""

import re

import termextract.core

# 重要度計算外とする語
IGNORE_WORDS = set(["和", "与", "的"])

# ストップワード(文字数順)を設定
STOPWORDS = [
    "立方厘米", "差点儿没", "好不容易", "无论如何", "噼哩啪啦", "嘁嘁查查",
    "丝丝拉拉", "哇哩哇啦", "唏哩哗啦",
    "进一步", "差不多", "差点儿", "一下子", "狠很的", "为什么", "那会儿",
    "不得不", "一会儿", "一点点", "那么样", "平方米", "十二分", "用不着",
    "有时候", "有一天", "语气词", "怎么样", "这会儿", "这么样", "一块儿",
    "说不定", "好容易", "哪会儿", "不由得",
    "并且", "不必", "不大", "不但", "不管", "不仅", "不禁", "不料", "不论",
    "不然", "不如", "不是", "不下", "不要", "不用", "不知", "常常", "除非",
    "除了", "匆匆", "匆忙", "从来", "凑巧", "大概", "大家", "大约", "但是",
    "到处", "到底", "的话", "等于", "东边", "东面", "对于", "顿时", "多亏",
    "多么", "多少", "俄顷", "而且", "而已", "凡是", "反而", "反正", "非常",
    "分外", "否则", "干脆", "赶紧", "赶快", "敢于", "刚刚", "格外", "根本",
    "根据", "更加", "公尺", "公分", "公斤", "公升", "故意", "固然", "好久",
    "好在", "何况", "何如", "何以", "轰隆", "后边", "后面", "后天", "后头",
    "忽然", "胡乱", "互相", "或是", "或者", "极端", "极了", "极其", "即使",
    "几乎", "几时", "既然", "假如", "假使", "简直", "渐渐", "将近", "将要",
    "今天", "仅仅", "尽管", "尽量", "经常", "竟然", "究竟", "就是", "就要",
    "居然", "据说", "看来", "可能", "可是", "可以", "肯定", "恳切", "恐怕",
    "况且", "来说", "厘米", "里头", "历来", "例如", "立即", "立刻", "连连",
    "连忙", "连夜", "另外", "陆续", "略微", "马上", "没有", "猛然", "明明",
    "明天", "哪儿", "哪里", "哪怕", "那儿", "那里", "那么", "那些", "那样",
    "奈何", "南边", "南面", "难道", "内边", "内面", "能够", "你们", "年年",
    "宁可", "偶尔", "偶然", "旁边", "偏偏", "偏巧", "片刻", "恰恰", "千万",
    "前边", "前面", "前头", "亲身", "亲手", "亲眼", "轻易", "全部", "然而",
    "然后", "人家", "仍旧", "日日", "如此", "如果", "若何", "上边", "上面",
    "上头", "上周", "稍微", "甚么", "十分", "十足", "时常", "时而", "时时",
    "什么", "使得", "始终", "事先", "是故", "是以", "首先", "谁都", "顺便",
    "顺着", "虽然", "随后", "随时", "随手", "索性", "所以", "他们", "他日",
    "它们", "她们", "倘若", "特别", "特地", "特意", "天天", "通过", "统统",
    "偷偷", "突然", "外边", "外面", "外头", "万分", "万一", "往往", "微微",
    "为着", "未必", "我们", "呜呼", "西边", "西面", "下边", "下面", "下头",
    "先后", "相当", "向来", "向往", "幸亏", "须臾", "沿着", "眼看", "要不",
    "要么", "也许", "一旦", "一定", "一共", "一起", "一日", "一头", "一向",
    "一再", "一直", "依然", "已经", "以北", "以后", "以及", "以南", "以内",
    "以前", "以上", "以外", "以西", "以下", "以右", "以左", "异常", "因此",
    "因为", "应当", "应该", "永远", "啊呀", "尤其", "由于", "有点", "有时",
    "啊哟", "有些", "按照", "右边", "右面", "于是", "与其", "暗暗", "预先",
    "愿意", "再三", "咱们", "暂时", "早就", "早已", "怎么", "罢了", "怎样",
    "曾经", "这儿", "北边", "这里", "这么", "北面", "这些", "这样", "正好",
    "正巧", "正在", "之北", "之后", "之间", "之南", "之内", "之前", "之上",
    "之外", "之西", "之下", "之右", "之中", "之左", "只好", "只是", "只要",
    "只有", "至多", "至今", "至少", "至于", "终于", "逐步", "逐渐", "转眼",
    "自从", "自己", "总共", "总算", "纵然", "昨天", "左面", "阿嚏", "嘣嘣",
    "潺潺", "哧溜", "脆生", "滴答", "丁当", "嘎巴", "咯吱", "咕咚", "咕嘟",
    "咕噜", "呱呱", "哈哈", "哼哈", "呼噜", "哗啦", "叽叽", "嘎嘎", "喳喳",
    "本月", "乒乓", "扑通", "比较", "毕竟", "必定", "必然", "嘻嘻", "点儿",
    "要是", "一边", "一面", "也要", "也不", "别看", "别说", "何必", "哎呀",
    "我国", "起来", "来着", "所谓", "会得", "方今", "方得",
    "啊", "按", "吧", "把", "被", "比", "彼", "必", "边", "便", "别", "并",
    "不", "才", "除", "次", "从", "打", "但", "当", "倒", "到", "得", "等",
    "点", "顶", "都", "对", "吨", "多", "俄", "而", "耳", "尔", "凡", "个",
    "跟", "更", "故", "顾", "过", "何", "很", "哼", "后", "乎", "还", "或",
    "极", "及", "即", "几", "既", "间", "将", "叫", "今", "竟", "净", "久",
    "就", "咯", "可", "况", "啦", "里", "连", "两", "了", "略", "嘛", "吗",
    "没", "末", "莫", "哪", "那", "乃", "呢", "能", "你", "您", "宁", "旁",
    "颇", "其", "起", "岂", "且", "去", "却", "群", "然", "让", "若", "尚",
    "少", "甚", "是", "受", "双", "谁", "他", "它", "她", "太", "趟", "条",
    "挺", "惟", "为", "未", "我", "吾", "勿", "昔", "先", "笑", "休", "呀",
    "焉", "也", "页", "已", "矣", "以", "亦", "因", "用", "由", "有", "又",
    "于", "余", "予", "哉", "再", "在", "暂", "遭", "则", "这", "之", "只",
    "住", "准", "着", "走", "足", "喽", "嘞", "噢", "噫", "敢", "肯", "些",
    "离", "嗬", "唉", "咳", "欸", "哟", "喂", "此", "夫", "来", "上", "下",
    "方",
    "", "、", "。", "”", "“", "，", "《", "》", "：", "（", "）", "；",
    "〈", "〉", "「", "」", "『", "』", "【", "】", "〔", "〕", "？", "！",
    "ー", "-", "ー", "…", "‘", "’", "／",
    "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "０", "１", "２", "３",
    "４", "５", "６", "７", "８", "９",
    " ",
    ]


def cmp_noun_list(data):
    """
    中文テキストを受け取り、複合語（空白区切りの単名詞）のリストを返す
    """
    cmp_nouns = []
    # 行レベルのループ
    for morph in data.split("\n"):
        morph.rstrip()
        terms = []
        if not morph:
            continue
        morph = morph.replace(",", " ")
        morph = morph.replace(".", " ")
        morph = morph.replace("(", " ")
        morph = morph.replace(")", " ")
        morph = morph.replace(";", " ")
        morph = morph.replace("!", " ")
        morph = morph.replace("[", " ")
        morph = morph.replace("]", " ")
        morph = morph.replace("?", " ")
        morph = morph.replace("/", " ")
        morph = morph.replace("\t", " ")
        while morph:
            eng_word = re.match(r"[a-zA-Z0-9_]+", morph)
            if eng_word is not None:
                morph = morph[len(eng_word.group(0)):]
                terms.append(eng_word.group(0))
                _increase(cmp_nouns, terms)
            else:
                for stopword in STOPWORDS:
                    if re.match(stopword, morph):
                        morph = morph[len(stopword):]
                        _increase(cmp_nouns, terms)
                        break
                else:
                    terms.append(morph[0])
                    morph = morph[1:]
        # 行の末尾の処理
        _increase(cmp_nouns, terms)
    return cmp_nouns


def _increase(cmp_nouns, terms):
    """
    専門用語リストへ、整形して追加するサブルーチン
    """
    if terms:
        cmp_noun = ' '.join(terms)
        cmp_nouns.append(cmp_noun)
    del terms[:]


def cmp_noun_dict(data):
    """
    複合語（単名詞の空白区切り）をキーに、その出現回数を値にしたディクショナリを返す
    """
    cmp_noun = cmp_noun_list(data)
    return termextract.core.list2dict(cmp_noun)
